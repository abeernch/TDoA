%% TDOA Analytical Solution Script for 3D position estimation for non-cooperative emitter using Hyperboloids

% It is a 3D problem with 3 unknowns in the presence of 'N' sensors, where N > 3.
% A centralized reference sensor (CRS) approach is used to solve the
% equations of the hyperboloids with S1 as the reference sensor. The
% drawback of ths CRS approach is the inability to robustly distinguish non-unique (GHOST)
% targets. The advantage is limited computation requirements. This is an
% alternative approach to decentralized reference sensor (DRS) network.

% This is a demo/test script demosntrating the solution of 03 equations
% given known sensor positions and received TOAs from a non-cooperative
% emitter.

% Author: Abeer Nasir ChaudhryÂ®
% 221118

clear;clc
syms x1 x2 x3 x4 x y1 y2 y3 y4 y z1 z2 z3 z4 z t1 t2 t3 t4 t c
% eqns = [c^2*(t1^2 - 2*t1*t - t2^2 +2*t2*t)- x1^2 + x2^2 - y1^2 - y2^2 + 2*x1*x - 2*x2*x + 2*y1*y - 2*y2*y==0,],

eqn1 = sqrt((x1-x)^2 + (y1-y)^2 + (z1-z)^2) - sqrt((x2-x)^2 + (y2-y)^2 + (z2-z)^2)  == c*(t1-t2);
eqn2 = sqrt((x1-x)^2 + (y1-y)^2 + (z1-z)^2) - sqrt((x3-x)^2 + (y3-y)^2 + (z3-z)^2)  == c*(t1-t3);
eqn3 = sqrt((x1-x)^2 + (y1-y)^2 + (z1-z)^2) - sqrt((x4-x)^2 + (y4-y)^2 + (z4-z)^2)  == c*(t1-t4);


%% Define sensor and source position
[x1,y1,z1]       = deal(0,0,0);
[x2,y2,z2]       = deal(-10e3,10e3,0.1e3);
[x3,y3,z3]       = deal(10e3,10e3,0.25e3);
[x4,y4,z4]       = deal(0e3,-15e3,-0.e3);
[x_act,y_act,z_act] = deal(1e3, 5e3,200);
c = 3e8;

%% Calculate sensor-source range
ranges = rangeangle([x1 x2 x3 x4;y1 y2 y3 y4; z1 z2 z3 z4],[x_act;y_act;z_act]);

%% Convert ranges to TOA
time_err = 30e-9*rand(1,4);
toa = range2time(ranges,c)*0.5;

toa = toa + time_err; % Induce timing error in TOAs

t1 = toa(1);
t2 = toa(2);
t3 = toa(3);
t4 = toa(4);


%% Evaluate equations
s1 = eval(eqn1);
s2 = eval(eqn2);
s3 = eval(eqn3);
sol = solve([s1 s2 s3],[x y z]);
%% Extract soln
xsol = sol.x;
ysol = sol.y;
zsol = sol.z;

x_est = (eval(xsol))
y_est = (eval(ysol))
z_est = (eval(zsol))